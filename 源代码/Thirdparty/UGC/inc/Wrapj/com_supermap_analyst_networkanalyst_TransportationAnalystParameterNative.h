/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative */

#ifndef _Included_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
#define _Included_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_New
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1New
  (JNIEnv *, jclass);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_Delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1Delete
  (JNIEnv *, jclass, jlong);


/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_Reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1Reset
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetNodes
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetNodes
  (JNIEnv *, jclass, jlong, jintArray);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetPoints
 * Signature: (J[D[D)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetPoints
  (JNIEnv *, jclass, jlong, jdoubleArray, jdoubleArray);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetWeightName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetWeightName
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetBarrierNodes
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetBarrierNodes
  (JNIEnv *, jclass, jlong, jintArray);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetBarrierEdges
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetBarrierEdges
  (JNIEnv *, jclass, jlong, jintArray);

///*
// * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
// * Method:    jni_GetIsRoutesReturn
// * Signature: (J)Z
// */
//JNIEXPORT jboolean JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1GetIsRoutesReturn
//  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetIsRoutesReturn
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetIsRoutesReturn
  (JNIEnv *, jclass, jlong, jboolean);

///*
// * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
// * Method:    jni_GetIsNodesReturn
// * Signature: (J)Z
// */
//JNIEXPORT jboolean JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1GetIsNodesReturn
//  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetIsNodesReturn
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetIsNodesReturn
  (JNIEnv *, jclass, jlong, jboolean);

///*
// * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
// * Method:    jni_GetIsEdgesReturn
// * Signature: (J)Z
// */
//JNIEXPORT jboolean JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1GetIsEdgesReturn
//  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetIsEdgesReturn
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetIsEdgesReturn
  (JNIEnv *, jclass, jlong, jboolean);

///*
// * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
// * Method:    jni_GetIsPathGuidesReturn
// * Signature: (J)Z
// */
//JNIEXPORT jboolean JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1GetIsPathGuidesReturn
//  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetIsPathGuidesReturn
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetIsPathGuidesReturn
  (JNIEnv *, jclass, jlong, jboolean);

///*
// * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
// * Method:    jni_GetIsStopsReturn
// * Signature: (J)Z
// */
//JNIEXPORT jboolean JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1GetIsStopsReturn
//  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetIsStopsReturn
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetIsStopsReturn
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative
 * Method:    jni_SetTurnWeightField
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TransportationAnalystParameterNative_jni_1SetTurnWeightField
  (JNIEnv *, jclass, jlong, jstring);





#ifdef __cplusplus
}
#endif
#endif
