/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_supermap_mapping_LayerNative */

#ifndef _Included_com_supermap_mapping_LayerNative
#define _Included_com_supermap_mapping_LayerNative
#ifdef __cplusplus
extern "C" {
#endif

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_IsCompleteLineSymbolDisplayed
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1IsCompleteLineSymbolDisplayed
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetCompleteLineSymbolDisplayed
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetCompleteLineSymbolDisplayed
		(JNIEnv *, jclass, jlong, jboolean);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_IsClipRegionEnabled
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1IsClipRegionEnabled
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetClipRegionEnabled
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetClipRegionEnabled
		(JNIEnv *, jclass, jlong, jboolean);
	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetName
	* Signature: (J)Ljava/lang/String;
	*/
	JNIEXPORT jstring JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetName
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetCaption
	* Signature: (J)Ljava/lang/String;
	*/
	JNIEXPORT jstring JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetCaption
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetCaption
	* Signature: (JLjava/lang/String;)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetCaption
		(JNIEnv *, jclass, jlong, jstring);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetDescription
	* Signature: (J)Ljava/lang/String;
	*/
	JNIEXPORT jstring JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetDescription
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetDescription
	* Signature: (JLjava/lang/String;)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetDescription
		(JNIEnv *, jclass, jlong, jstring);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetParentLayer
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetParentLayer
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetChildLayer
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetChildLayer
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetDataset
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetDataset
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetDataset
	* Signature: (JJ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetDataset
		(JNIEnv *, jclass, jlong, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetIsEditable
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetIsEditable
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetIsEditableLock
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetIsEditableLock
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetIsEditableLock
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetIsEditableLock
		(JNIEnv *, jclass, jlong, jboolean);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetIsHyperlinkEnabled
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetIsHyperlinkEnabled
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetIsHyperlinkEnabled
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetIsHyperlinkEnabled
		(JNIEnv *, jclass, jlong, jboolean);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetHyperlinkField
	* Signature: (J)Ljava/lang/String;
	*/
	JNIEXPORT jstring JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetHyperlinkField
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetHyperlinkField
	* Signature: (JLjava/lang/String;)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetHyperlinkField
		(JNIEnv *, jclass, jlong, jstring);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetTheme
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetTheme
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetRasterBrightness
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetRasterBrightness
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetRasterBrightness
	* Signature: (JI)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetRasterBrightness
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetRasterContrast
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetRasterContrast
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetRasterContrast
	* Signature: (JI)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetRasterContrast
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetRasterOpaqueRate
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetRasterOpaqueRate
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetRasterOpaqueRate
	* Signature: (JI)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetRasterOpaqueRate
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetRasterIsBackTransparent
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetRasterIsBackTransparent
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetRasterBackTransparent
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetRasterBackTransparent
		(JNIEnv *, jclass, jlong, jboolean);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetRasterBackTransparentColor
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetRasterBackTransparentColor
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetRasterBackTransparentColor
	* Signature: (JI)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetRasterBackTransparentColor
		(JNIEnv *, jclass, jlong, jint);
	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetSelection
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetSelection
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetSelection
	* Signature: (JJ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetSelection
		(JNIEnv *, jclass, jlong, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetSelectable
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetSelectable
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetSelectable
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetSelectable
		(JNIEnv *, jclass, jlong, jboolean);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetIsSnapable
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetIsSnapable
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetIsSnapable
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetIsSnapable
		(JNIEnv *, jclass, jlong, jboolean);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetIsSymbolScalable
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetIsSymbolScalable
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetIsSymbolScalable
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetIsSymbolScalable
		(JNIEnv *, jclass, jlong, jboolean);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetSymbolScale
	* Signature: (J)D
	*/
	JNIEXPORT jdouble JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetSymbolScale
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetSymbolScale
	* Signature: (JD)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetSymbolScale
		(JNIEnv *, jclass, jlong, jdouble);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetIsVisible
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetIsVisible
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetIsVisible
	* Signature: (JZ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetIsVisible
		(JNIEnv *, jclass, jlong, jboolean);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetMaxVisibleScale
	* Signature: (J)D
	*/
	JNIEXPORT jdouble JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetMaxVisibleScale
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetMaxVisibleScale
	* Signature: (JD)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetMaxVisibleScale
		(JNIEnv *, jclass, jlong, jdouble);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetMinVisibleScale
	* Signature: (J)D
	*/
	JNIEXPORT jdouble JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetMinVisibleScale
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetMinVisibleScale
	* Signature: (JD)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetMinVisibleScale
		(JNIEnv *, jclass, jlong, jdouble);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetMinVisibleGeometrySize
	* Signature: (J)D
	*/
	JNIEXPORT jdouble JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetMinVisibleGeometrySize
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetMinVisibleGeometrySize
	* Signature: (JD)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetMinVisibleGeometrySize
		(JNIEnv *, jclass, jlong, jdouble);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetInvisibleGeometryCount
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetInvisibleGeometryCount
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetInvisibleGeometryID
	* Signature: (J[I)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetInvisibleGeometryID
		(JNIEnv *, jclass, jlong, jintArray);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_AddInvisibleGeoID
	* Signature: (JI)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1AddInvisibleGeoID
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_RemoveInvisibleGeoID
	* Signature: (JI)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1RemoveInvisibleGeoID
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_IsGeometryInvisible
	* Signature: (JI)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1IsGeometryInvisible
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_ClearInvisibleGeoID
	* Signature: (J)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1ClearInvisibleGeoID
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_HitTest
	* Signature: (JDDDJ)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1HitTest
		(JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_IsVisibleScale
	* Signature: (JD)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1IsVisibleScale
		(JNIEnv *, jclass, jlong, jdouble);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_FromXML
	* Signature: (JLjava/lang/String;)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1FromXML
		(JNIEnv *, jclass, jlong, jstring);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_ToXML
	* Signature: (J)Ljava/lang/String;
	*/
	JNIEXPORT jstring JNICALL Java_com_supermap_mapping_LayerNative_jni_1ToXML
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetDisplayFilter
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetDisplayFilter
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetDisplayFilter
	* Signature: (JJ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetDisplayFilter
		(JNIEnv *, jclass, jlong, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetStyle
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetStyle
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetStyle
	* Signature: (JJ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetStyle
		(JNIEnv *, jclass, jlong, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetDatasetType
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetDatasetType
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetDatasourceOfDataset
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetDatasourceOfDataset
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetColorTable
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetColorTable
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetColorTable
	* Signature: (JJ)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetColorTable
		(JNIEnv *, jclass, jlong, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_GetGridNoValueColor
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_mapping_LayerNative_jni_1GetGridNoValueColor
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_SetGridNoValueColor
	* Signature: (JI)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1SetGridNoValueColor
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_ThemeToDatasetVector
	* Signature: (JJJ)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_LayerNative_jni_1ThemeToDatasetVector
		(JNIEnv *, jclass, jlong, jlong, jlong);

	/*
	* Class:     com_supermap_mapping_LayerNative
	* Method:    jni_Reset
	* Signature: (J)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_LayerNative_jni_1Reset
		(JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
