/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_supermap_data_WorkspaceNative */

#ifndef _Included_com_supermap_data_WorkspaceNative
#define _Included_com_supermap_data_WorkspaceNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_New
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_data_WorkspaceNative_jni_1New
  (JNIEnv *, jclass);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_Delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_data_WorkspaceNative_jni_1Delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_Close
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_data_WorkspaceNative_jni_1Close
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_GetName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetName
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_GetCaption
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetCaption
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_SetCaption
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_supermap_data_WorkspaceNative_jni_1SetCaption
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_GetIsModified
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetIsModified
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_GetDescription
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetDescription
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_SetDescription
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_supermap_data_WorkspaceNative_jni_1SetDescription
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_GetType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetType
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_GetVersion
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetVersion
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_Create
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_data_WorkspaceNative_jni_1Create
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_SaveAs
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_data_WorkspaceNative_jni_1SaveAs
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_Open
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_data_WorkspaceNative_jni_1Open
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_Save
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_data_WorkspaceNative_jni_1Save
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_GetMaps
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetMaps
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_Reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_data_WorkspaceNative_jni_1Reset
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_data_WorkspaceNative
 * Method:    jni_GetConnectionInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetConnectionInfo
  (JNIEnv *, jclass, jlong);

/*
* Class:     com_supermap_data_WorkspaceNative
* Method:    jni_GetWorkspaceName
* Signature: (J)[Ljava/lang/String;
*/
JNIEXPORT jobjectArray JNICALL Java_com_supermap_data_WorkspaceNative_jni_1GetWorkspaceName
(JNIEnv *, jclass, jlong);

/*
* Class:     com_supermap_data_WorkspaceNative
* Method:    jni_DeleteWorkspace
* Signature: (J)Z
*/
JNIEXPORT jboolean JNICALL Java_com_supermap_data_WorkspaceNative_jni_1DeleteWorkspace
(JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
