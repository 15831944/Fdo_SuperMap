/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_supermap_mapping_MapNative */

#ifndef _Included_com_supermap_mapping_MapNative
#define _Included_com_supermap_mapping_MapNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_supermap_mapping_MapNative_jni_1GetName
  (JNIEnv *, jclass, jlong);
/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_IsClipRegionEnabled
* Signature: (J)Z
*/
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1IsClipRegionEnabled
(JNIEnv *, jclass, jlong);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_SetClipRegionEnabled
* Signature: (JZ)V
*/
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetClipRegionEnabled
(JNIEnv *, jclass, jlong, jboolean);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_GetClipRegion
* Signature: (J)J
*/
JNIEXPORT jlong JNICALL Java_com_supermap_mapping_MapNative_jni_1GetClipRegion
(JNIEnv *, jclass, jlong);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_SetClipRegion
* Signature: (JJ)V
*/
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetClipRegion
(JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetDescription
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_supermap_mapping_MapNative_jni_1GetDescription
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetDescription
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetDescription
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetAngle
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_supermap_mapping_MapNative_jni_1GetAngle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetAngle
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetAngle
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetBackgroundStyle
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetBackgroundStyle
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetBounds
 * Signature: (J[D)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1GetBounds
  (JNIEnv *, jclass, jlong, jdoubleArray);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetViewBounds
 * Signature: (J[D)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1GetViewBounds
  (JNIEnv *, jclass, jlong, jdoubleArray);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetViewBounds
 * Signature: (JDDDD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetViewBounds
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetIsViewBoundsLocked
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetIsViewBoundsLocked
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetIsViewBoundsLocked
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetIsViewBoundsLocked
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetLockedViewBounds
 * Signature: (J[D)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1GetLockedViewBounds
  (JNIEnv *, jclass, jlong, jdoubleArray);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetLockedViewBounds
 * Signature: (JDDDD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetLockedViewBounds
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetImageSize
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetImageSize
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetCenter
 * Signature: (J[D)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1GetCenter
  (JNIEnv *, jclass, jlong, jdoubleArray);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetCenter
 * Signature: (JDD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetCenter
  (JNIEnv *, jclass, jlong, jdouble, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetColorMode
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_supermap_mapping_MapNative_jni_1GetColorMode
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetColorMode
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetColorMode
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetIsSmoothingMode
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetIsSmoothingMode
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetIsSmoothingMode
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetIsSmoothingMode
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetIsTextFixedAngle
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetIsTextFixedAngle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetIsTextFixedAngle
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetIsTextFixedAngle
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetIsFixedTextOrientation
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetIsFixedTextOrientation
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetIsFixedTextOrientation
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetIsFixedTextOrientation
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetAllowTextOverlap
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetAllowTextOverlap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetAllowTextOverlap
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetAllowTextOverlap
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetIsMarkerFixedAngle
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetIsMarkerFixedAngle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetIsMarkerFixedAngle
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetIsMarkerFixedAngle
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetIsModified
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetIsModified
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetIsModified
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetIsModified
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetIsPaintBackground
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetIsPaintBackground
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetIsPaintBackground
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetIsPaintBackground
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetIsDynamicProjection
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetIsDynamicProjection
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetIsDynamicProjection
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetIsDynamicProjection
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetMaxVisibleTextSize
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_supermap_mapping_MapNative_jni_1GetMaxVisibleTextSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetMaxVisibleTextSize
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetMaxVisibleTextSize
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetMinVisibleTextSize
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_supermap_mapping_MapNative_jni_1GetMinVisibleTextSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetMinVisibleTextSize
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetMinVisibleTextSize
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetScale
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_supermap_mapping_MapNative_jni_1GetScale
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetScale
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetScale
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetWorkspace
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetWorkspace
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_Open
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1Open
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_Close
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1Close
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SaveAs
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1SaveAs
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_HitTest
 * Signature: (JDDD[J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1HitTest
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jlongArray);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_OutputMapToFile
 * Signature: (JLjava/lang/String;III)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1OutputMapToFile
  (JNIEnv *, jclass, jlong, jstring, jint, jint, jint);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_Zoom
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1Zoom
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_Pan
 * Signature: (JDD)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1Pan
  (JNIEnv *, jclass, jlong, jdouble, jdouble);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_Refresh
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1Refresh
  (JNIEnv *, jclass, jlong);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_RefreshTrackingLayer
* Signature: (J)V
*/
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1RefreshTrackingLayer
(JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_ViewEntire
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1ViewEntire
  (JNIEnv *, jclass, jlong);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_ViewEntire
* Signature: (JII)Z
*/
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1ViewEntire__JII
(JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_FromXML
 * Signature: (JLjava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1FromXML
  (JNIEnv *, jclass, jlong, jstring, jboolean);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_ToXML
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_supermap_mapping_MapNative_jni_1ToXML
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_New
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_mapping_MapNative_jni_1New
  (JNIEnv *, jclass);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_Delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1Delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetLayersCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_supermap_mapping_MapNative_jni_1GetLayersCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetLayers
 * Signature: (J[J[Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1GetLayers
  (JNIEnv *, jclass, jlong, jlongArray, jobjectArray);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetLayersHandle
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_mapping_MapNative_jni_1GetLayersHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetTrackingLayer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_mapping_MapNative_jni_1GetTrackingLayer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetBackGroundStyle
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_mapping_MapNative_jni_1GetBackGroundStyle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetMaxVisibleVertex
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_supermap_mapping_MapNative_jni_1GetMaxVisibleVertex
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetMaxVisibleVertex
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetMaxVisibleVertex
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_MapToPixel
 * Signature: (JDD[I)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1MapToPixel
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jintArray);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_PixelToMap
 * Signature: (JII[D)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1PixelToMap
  (JNIEnv *, jclass, jlong, jint, jint, jdoubleArray);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_GetPrjCoordSys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_mapping_MapNative_jni_1GetPrjCoordSys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_mapping_MapNative
 * Method:    jni_SetPrjCoordSys
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetPrjCoordSys
  (JNIEnv *, jclass, jlong, jlong);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_GetCoordUnit
* Signature: (J)I
*/
JNIEXPORT jint JNICALL Java_com_supermap_mapping_MapNative_jni_1GetCoordUnit
(JNIEnv *, jclass, jlong);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_SetCoordUnit
* Signature: (JI)V
*/
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetCoordUnit
(JNIEnv *, jclass, jlong, jint);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_GetDistanceUnit
* Signature: (J)I
*/
JNIEXPORT jint JNICALL Java_com_supermap_mapping_MapNative_jni_1GetDistanceUnit
(JNIEnv *, jclass, jlong);

/*
* Class:     com_supermap_mapping_MapNative
* Method:    jni_SetDistanceUnit
* Signature: (JI)V
*/
JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetDistanceUnit
(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_MapNative
	* Method:    jni_GetMaxVisibleVertex
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_mapping_MapNative_jni_1GetMaxVisibleVertex
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_MapNative
	* Method:    jni_SetMaxVisibleVertex
	* Signature: (JI)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1SetMaxVisibleVertex
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_mapping_MapNative
	* Method:    jni_MapToPixel
	* Signature: (JDD[I)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1MapToPixel
		(JNIEnv *, jclass, jlong, jdouble, jdouble, jintArray);

	/*
	* Class:     com_supermap_mapping_MapNative
	* Method:    jni_PixelToMap
	* Signature: (JII[D)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1PixelToMap
		(JNIEnv *, jclass, jlong, jint, jint, jdoubleArray);

	/*
	* Class:     com_supermap_mapping_MapNative
	* Method:    jni_Reset
	* Signature: (J)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_mapping_MapNative_jni_1Reset
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_mapping_MapNative
	* Method:    jni_GetMapImage
	* Signature: (JJ)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetMapImage
		(JNIEnv *, jclass, jlong, jlong);

	/*
	* Class:     com_supermap_mapping_MapNative
	* Method:    jni_GetTrackingLayerImage
	* Signature: (JJ)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_mapping_MapNative_jni_1GetTrackingLayerImage
		(JNIEnv *, jclass, jlong, jlong,jboolean);

#ifdef __cplusplus
}
#endif
#endif
