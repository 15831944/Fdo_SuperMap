/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_supermap_objects_analyst_NetworkAnalystNative */

#ifndef _Included_com_supermap_objects_analyst_NetworkAnalystNative
#define _Included_com_supermap_objects_analyst_NetworkAnalystNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_FindCriticalEdges
 * Signature: (JIII)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1FindCriticalEdges
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_FindCriticalNodes
 * Signature: (JIII)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1FindCriticalNodes
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_FindAdjacentNodes
 * Signature: (JII)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1FindAdjacentNodes
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_FindConnectedEdges
 * Signature: (JIII)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1FindConnectedEdges
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_FindConnectedNodes
 * Signature: (JIII)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1FindConnectedNodes
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_PathByPoints
 * Signature: (JJI[I[IJ)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1PathByPoints
  (JNIEnv *, jclass, jlong, jlong, jint, jintArray, jintArray, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_PathByIDs
 * Signature: (J[II[I[IJ)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1PathByIDs
  (JNIEnv *, jclass, jlong, jintArray, jint, jintArray, jintArray, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_ClosestFacilityV1
 * Signature: (JDDJDZIJ)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1ClosestFacilityV1
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jlong, jdouble, jboolean, jint, jlong);


/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_GetResultEdgeIDs
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1GetResultEdgeIDs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_GetResultNodeIDs
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1GetResultNodeIDs
  (JNIEnv *, jclass, jlong);



/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_ClosestFacilityV4
 * Signature: (JI[IDZIJ)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1ClosestFacilityV4
  (JNIEnv *, jclass, jlong, jint, jintArray, jdouble, jboolean, jint, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_TSPPathByPoints
 * Signature: (JJZIJ)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1TSPPathByPoints
  (JNIEnv *, jclass, jlong, jlong, jboolean, jint, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_TSPPathByIDs
 * Signature: (J[IZIJ)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1TSPPathByIDs
  (JNIEnv *, jclass, jlong, jintArray, jboolean, jint, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_ServiceArea
 * Signature: (JDDDZJ)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1ServiceArea
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jboolean, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_SetDatasetNetwork
 * Signature: (JJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1SetDatasetNetwork
  (JNIEnv *, jclass, jlong, jlong, jstring, jstring, jstring, jstring, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_SetRoadRule
 * Signature: (JLjava/lang/String;[I[I[I[I)V
 */
JNIEXPORT void JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1SetRoadRule
  (JNIEnv *, jclass, jlong, jstring, jintArray, jintArray, jintArray, jintArray);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_CreateAdjMatrix
 * Signature: (J[I[I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1CreateAdjMatrix
  (JNIEnv *, jclass, jlong, jintArray, jintArray);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_DestroyAdjMatrix
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1DestroyAdjMatrix
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_SetTurnTable
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1SetTurnTable
  (JNIEnv *, jclass, jlong, jstring, jstring, jstring, jlong, jstring);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_setTolerance
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1setTolerance
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_supermap_objects_analyst_NetworkAnalystNative
 * Method:    jni_getTolerance
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_supermap_objects_analyst_NetworkAnalystNative_jni_1getTolerance
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
