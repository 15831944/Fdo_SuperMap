/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_supermap_data_DatasetVectorNative */

#ifndef _Included_com_supermap_data_DatasetVectorNative
#define _Included_com_supermap_data_DatasetVectorNative
#ifdef __cplusplus
extern "C" {
#endif
	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetCharset
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetCharset
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_SetCharset
	* Signature: (JI)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1SetCharset
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetChildDataset
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetChildDataset
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetParentDataset
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetParentDataset
		(JNIEnv *, jclass, jlong);

	/*
	 * Class:     com_supermap_data_DatasetVectorNative
	 * Method:    jni_GetSpatialIndexType
	 * Signature: (J)I
	 */
	JNIEXPORT jint JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetSpatialIndexType
	  (JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetIsSpatialIndexDirty
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetIsSpatialIndexDirty
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetIsMemoryCache
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetIsMemoryCache
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetIsFileCache
	* Signature: (J)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetIsFileCache
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetRecordCount
	* Signature: (J)I
	*/
	JNIEXPORT jint JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetRecordCount
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetFieldInfos
	* Signature: (J)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetFieldInfos
		(JNIEnv *, jclass, jlong);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_Append
	* Signature: (JJLjava/lang/String;Ljava/lang/String;)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1Append
		(JNIEnv *, jclass, jlong, jlong, jstring, jstring);


	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_IsAvailableFieldName
	* Signature: (JLjava/lang/String;)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1IsAvailableFieldName
		(JNIEnv *, jclass, jlong, jstring);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetUnoccupiedFieldName
	* Signature: (JLjava/lang/String;)Ljava/lang/String;
	*/
	JNIEXPORT jstring JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetUnoccupiedFieldName
		(JNIEnv *, jclass, jlong, jstring);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetEmptyRecordset
	* Signature: (JI)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetEmptyRecordset
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_GetAllRecordsByRecordset
	* Signature: (JI)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1GetAllRecordsByRecordset
		(JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_Resample
	* Signature: (JD)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1Resample
		(JNIEnv *, jclass, jlong, jdouble);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_CreateFieldIndex
	* Signature: (JLjava/lang/String;Ljava/lang/String;)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1CreateFieldIndex
		(JNIEnv *, jclass, jlong, jstring, jstring);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_Statistic
	* Signature: (JLjava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1Statistic
		(JNIEnv *, jclass, jlong, jstring, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_UpdateField1
	* Signature: (JLjava/lang/String;JLjava/lang/String;)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1UpdateField1
		(JNIEnv *, jclass, jlong, jstring, jlong, jstring);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_UpdateField2
	* Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
	*/
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1UpdateField2
		(JNIEnv *, jclass, jlong, jstring, jstring, jstring);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_ComputeBounds
	* Signature: (J[D)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1ComputeBounds
		(JNIEnv *, jclass, jlong, jdoubleArray);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_DropFieldIndex
	* Signature: (JLjava/lang/String;)V
	*/
	JNIEXPORT void JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1DropFieldIndex
		(JNIEnv *, jclass, jlong, jstring);

	/*
	 * Class:     com_supermap_data_DatasetVectorNative
	 * Method:    jni_BuildSpatialIndex1
	 * Signature: (JI)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1BuildSpatialIndex1
	  (JNIEnv *, jclass, jlong, jint);

	/*
	 * Class:     com_supermap_data_DatasetVectorNative
	 * Method:    jni_BuildSpatialIndex2
	 * Signature: (JJ)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1BuildSpatialIndex2
	  (JNIEnv *, jclass, jlong, jlong);

	/*
	 * Class:     com_supermap_data_DatasetVectorNative
	 * Method:    jni_DropSpatialIndex
	 * Signature: (J)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1DropSpatialIndex
	  (JNIEnv *, jclass, jlong);

	/*
	 * Class:     com_supermap_data_DatasetVectorNative
	 * Method:    jni_IsSpatialIndexTypeSupported
	 * Signature: (JI)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1IsSpatialIndexTypeSupported
	  (JNIEnv *, jclass, jlong, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_Query1
	* Signature: (JLjava/lang/String;)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1Query1
		(JNIEnv *, jclass, jlong, jstring, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_Query2
	* Signature: (JJDLjava/lang/String;)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1Query2
		(JNIEnv *, jclass, jlong, jlong, jdouble, jstring, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_Query3
	* Signature: (JDDDDLjava/lang/String;)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1Query3
		(JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jstring, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_Query4
	* Signature: (J[ILjava/lang/String;)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1Query4
		(JNIEnv *, jclass, jlong, jintArray, jint);

	/*
	* Class:     com_supermap_data_DatasetVectorNative
	* Method:    jni_Query5
	* Signature: (JJIJILjava/lang/String;)J
	*/
	JNIEXPORT jlong JNICALL Java_com_supermap_data_DatasetVectorNative_jni_1Query5
		(JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jstring);

#ifdef __cplusplus
}
#endif
#endif
