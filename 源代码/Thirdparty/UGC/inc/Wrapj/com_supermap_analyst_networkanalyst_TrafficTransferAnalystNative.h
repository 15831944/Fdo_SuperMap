/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative */

#ifndef _Included_com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative
#define _Included_com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative
 * Method:    jni_New
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative_jni_1New
  (JNIEnv *, jclass);

/*
 * Class:     com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative
 * Method:    jni_Delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative_jni_1Delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative
 * Method:    jni_LoadModel
 * Signature: (JJJJ[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative_jni_1LoadModel
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jobjectArray, jstring, jstring);

/*
 * Class:     com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative
 * Method:    jni_FindTransferPath
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative_jni_1FindTransferPath
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative
 * Method:    jni_FindStops
 * Signature: (JI)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative_jni_1FindStops
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative
 * Method:    jni_FindLines
 * Signature: (JI)[I
 */
JNIEXPORT jintArray JNICALL Java_com_supermap_analyst_networkanalyst_TrafficTransferAnalystNative_jni_1FindLines
  (JNIEnv *, jclass, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
