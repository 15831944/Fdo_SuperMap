/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_supermap_objects_data_GeoCardinalNative */

#ifndef _Included_com_supermap_objects_data_GeoCardinalNative
#define _Included_com_supermap_objects_data_GeoCardinalNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_GetControlPointX
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1GetControlPointX
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_GetControlPointY
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1GetControlPointY
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_GetControlPoints
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1GetControlPoints
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_AddControlPoint
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1AddControlPoint
  (JNIEnv *, jclass, jlong, jdouble, jdouble);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_AddControlPoints
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1AddControlPoints
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_Clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1Clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_ConvertToLine
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1ConvertToLine
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_GetControlPointCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1GetControlPointCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_InsertControlPoint
 * Signature: (JIDD)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1InsertControlPoint
  (JNIEnv *, jclass, jlong, jint, jdouble, jdouble);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_InsertControlPoints
 * Signature: (JIJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1InsertControlPoints
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_Joint
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1Joint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_RemoveControlPoint
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1RemoveControlPoint
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_RemoveControlPoints
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1RemoveControlPoints
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_SetControlPoint
 * Signature: (JIDD)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1SetControlPoint
  (JNIEnv *, jclass, jlong, jint, jdouble, jdouble);

/*
 * Class:     com_supermap_objects_data_GeoCardinalNative
 * Method:    jni_SetControlPoints
 * Signature: (JIJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_supermap_objects_data_GeoCardinalNative_jni_1SetControlPoints
  (JNIEnv *, jclass, jlong, jint, jlong);

#ifdef __cplusplus
}
#endif
#endif
